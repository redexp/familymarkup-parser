// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenName-0]
	_ = x[TokenSurname-1]
	_ = x[TokenAlias-2]
	_ = x[TokenUnknown-3]
	_ = x[TokenWord-4]
	_ = x[TokenNum-5]
	_ = x[TokenArrow-6]
	_ = x[TokenEqual-7]
	_ = x[TokenPunctuation-8]
	_ = x[TokenPlus-9]
	_ = x[TokenComma-10]
	_ = x[TokenBracket-11]
	_ = x[TokenBracketLeft-12]
	_ = x[TokenBracketRight-13]
	_ = x[TokenComment-14]
	_ = x[TokenSpace-15]
	_ = x[TokenEmptyLines-16]
	_ = x[TokenNewLine-17]
	_ = x[TokenInvalid-18]
}

const _TokenType_name = "TokenNameTokenSurnameTokenAliasTokenUnknownTokenWordTokenNumTokenArrowTokenEqualTokenPunctuationTokenPlusTokenCommaTokenBracketTokenBracketLeftTokenBracketRightTokenCommentTokenSpaceTokenEmptyLinesTokenNewLineTokenInvalid"

var _TokenType_index = [...]uint8{0, 9, 21, 31, 43, 52, 60, 70, 80, 96, 105, 115, 127, 143, 160, 172, 182, 197, 209, 221}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
