// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenName-0]
	_ = x[TokenUnknown-1]
	_ = x[TokenWord-2]
	_ = x[TokenNum-3]
	_ = x[TokenArrow-4]
	_ = x[TokenEqual-5]
	_ = x[TokenPunctuation-6]
	_ = x[TokenPlus-7]
	_ = x[TokenComma-8]
	_ = x[TokenBracket-9]
	_ = x[TokenBracketLeft-10]
	_ = x[TokenBracketRight-11]
	_ = x[TokenComment-12]
	_ = x[TokenSpace-13]
	_ = x[TokenEmptyLines-14]
	_ = x[TokenNewLine-15]
	_ = x[TokenInvalid-16]
}

const _TokenType_name = "TokenNameTokenUnknownTokenWordTokenNumTokenArrowTokenEqualTokenPunctuationTokenPlusTokenCommaTokenBracketTokenBracketLeftTokenBracketRightTokenCommentTokenSpaceTokenEmptyLinesTokenNewLineTokenInvalid"

var _TokenType_index = [...]uint8{0, 9, 21, 30, 38, 48, 58, 74, 83, 93, 105, 121, 138, 150, 160, 175, 187, 199}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
